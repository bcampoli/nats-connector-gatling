resources:
#need to add git repo as well for docs

- name: github-repo-master
  type: git
  source:
    uri: ((github-uri))
    branch: master
    git_user: ((github-username))
    private_key: ((github-ssh-key-private))

#- name: github-repo-scaladoc
#  type: git
  #source:
  #  uri: ((github-uri))
  #  branch: gh-pages
  #  git_user: ((github-username))
  #  private_key: ((github-ssh-key-private))


jobs:

- name: build
  plan:
  - get: github-repo-master
    trigger: true
  - task: compile-and-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hseeberger/scala-sbt
          tag: "latest"
      inputs:
      - name: github-repo-master
      run:
        path: bash
        args:
        - -exc
        - |
          sbt clean compile test

- name: deploy
  plan:
  - get: github-repo-master
    trigger: true
  - task: check-non-snapshot
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hseeberger/scala-sbt
          tag: "latest"
      inputs:
      - name: github-repo-master
      run:
        path: bash
        args:
        - -exc
        - |
          export PROJECT_VERSION=$(sbt 'inspect version' | grep Setting | awk '{print $NF}' | perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g')
          if [[ ${PROJECT_VERSION} == *"SNAPSHOT"* ]];then exit 1; fi
          exit 0
      on-success:
        - task: sonatype-deploy
          params:
            SONATYPE_PGP_SECRING_64: ((sonatype-pgp-secring-64))
            SONATYPE_PGP_PUBRING_64: ((sonatype-pgp-pubring-64))
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: hseeberger/scala-sbt
                tag: "latest"
            inputs:
            - name: github-repo-master
            run:
              path: bash
              args:
              - -exc
              - |
                echo "${SONATYPE_PGP_SECRING_64}" | base64 -d > /pipeline/source/secring.asc
                echo "${SONATYPE_PGP_PUBRING_64}" | base64 -d > /pipeline/source/pubring.asc
                sbt clean compile publishSigned sonatypeRelease
      on-failure:
        - task: deploy-snapshot
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: hseeberger/scala-sbt
                tag: "latest"
            inputs:
            - name: github-repo-master
            run:
              path: bash
              args:
              - -exc
              - |
                sbt clean compile publish


#- name: scaladoc
